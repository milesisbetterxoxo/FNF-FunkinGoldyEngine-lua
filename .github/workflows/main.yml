# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.2
          haxelib install flixel 5.5.0
          haxelib install flixel-addons 3.2.1
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install hxcpp 4.3.2
          haxelib install hxCodec 3.0.2
          haxelib install SScript 7.7.0
          haxelib install hxcpp-debug-server 1.2.4
          haxelib install tjson 1.4.0
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib install hscript-ex 0.0.0
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hscript 2.5.0
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: 'export/release/linux/bin' 
  buildWindows:
    runs-on: windows-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.2
          haxelib install flixel 5.5.0
          haxelib install flixel-addons 3.2.1
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install hxcpp 4.3.2
          haxelib install hxCodec 3.0.2
          haxelib install SScript 7.7.0
          haxelib install hxcpp-debug-server 1.2.4
          haxelib install tjson 1.4.0
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib install hscript-ex 0.0.0
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hscript 2.5.0
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildWindows32:
    runs-on: windows-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.2
          haxelib install flixel 5.5.0
          haxelib install flixel-addons 3.2.1
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install hxcpp 4.3.2
          haxelib install hxCodec 3.0.2
          haxelib install SScript 7.7.0
          haxelib install hxcpp-debug-server 1.2.4
          haxelib install tjson 1.4.0
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib install hscript-ex 0.0.0
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hscript 2.5.0
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows -32 -D 32bits --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windows32Build
          path: export/32bit/windows/bin
  buildMac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.2
          haxelib install flixel 5.5.0
          haxelib install flixel-addons 3.2.1
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install hxcpp 4.3.2
          haxelib install hxCodec 3.0.2
          haxelib install SScript 7.7.0
          haxelib install hxcpp-debug-server 1.2.4
          haxelib install tjson 1.4.0
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib install hscript-ex 0.0.0
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hscript 2.5.0
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild
          path: export/release/macos/bin
  buildHTML5:
    runs-on: windows-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.2
          haxelib install flixel 5.5.0
          haxelib install flixel-addons 3.2.1
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install hxcpp 4.3.2
          haxelib install hxCodec 3.0.2
          haxelib install SScript 7.7.0
          haxelib install hxcpp-debug-server 1.2.4
          haxelib install tjson 1.4.0
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib install hscript-ex 0.0.0
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hscript 2.5.0
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build html5 --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: html5Build
          path: export/release/html5/bin
